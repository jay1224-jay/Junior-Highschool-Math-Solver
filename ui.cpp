// generated by Fast Light User Interface Designer (fluid) version 1.0308

#include <iostream>

#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Menu_Button.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Int_Input.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Box.H>
//#include <FL/Fl_PNG_Image.H>

#include "variable.h"


#define margin 80   // for sincos_group



using namespace std;


// global var
//


void lcm_calc(Fl_Widget* , void*);

void lcm_clean(Fl_Widget* , void*);


void sincos_calc(Fl_Widget*, void*) ;
void sincos_clean(Fl_Widget*, void*) ;


Fl_Window* w;

Fl_Group* lcm_group;
Fl_Group* gcd_group;
Fl_Group* sincos_group;
Fl_Group* heron_group;
Fl_Group* se_group;
Fl_Group* twopow_group;


Fl_Input* gcd_number_input;
Fl_Box* gcd_output_text;

Fl_Input* lcm_number_input;
Fl_Box* lcm_output_text;



Fl_Int_Input* sin_degree;
Fl_Int_Input* cos_degree;
Fl_Int_Input* tan_degree;

Fl_Output* sin_output;
Fl_Output* cos_output;
Fl_Output* tan_output;

void hide_all(void) {

    lcm_group->hide();
    gcd_group->hide();
    sincos_group->hide();
    heron_group->hide();
    se_group->hide();
    twopow_group->hide();
}


void gcd_cb(Fl_Widget* w, void*) {
    hide_all();
    gcd_group->show();
}


void lcm_cb(Fl_Widget* w, void*) {
    hide_all();
    lcm_group->show();
}


void sincos_cb( Fl_Widget* w, void* ) {
    hide_all();
    sincos_group->show();
    //cout << "sin cos" << endl;
}
void heron_cb( Fl_Widget* w, void* ) {
    hide_all();
    heron_group->show();
}

void se_cb( Fl_Widget* w, void*) {
    hide_all();
    se_group->show();
}

void twopow_cb( Fl_Widget* w, void*) {
    hide_all();
    twopow_group->show();
}





void make_ui(void) {
    w = new Fl_Window(800, 500);
    w->color((Fl_Color)45);
    Fl_Menu_Bar* bar = new Fl_Menu_Bar(160, 0, 1365, 25);

    bar->add("gcd", 0, gcd_cb);
    bar->add("lcm", 0, lcm_cb);



    Fl_Menu_Button* menu_triangle = new Fl_Menu_Button(0, 0, 80, 25, "triangle");

    menu_triangle->add("sin,cos", 0, sincos_cb);
    menu_triangle->add("heron\'s", 0, heron_cb);


    Fl_Menu_Button* menu_alg = new Fl_Menu_Button(80, 0, 80, 25, "algebra");
    menu_alg->add("se", 0, se_cb);
    menu_alg->add("2powEq", 0, twopow_cb);






    gcd_group = new Fl_Group(100, 70, 600, 500);



    gcd_number_input = new Fl_Input(300, 100, 270, 30, "numbers");

    Fl_Button* gcd_calc_btn = new Fl_Button(300, 200, 50, 30, "calc");
    Fl_Button* gcd_clean_btn = new Fl_Button(380, 200, 50, 30, "clean");

    gcd_calc_btn->callback(gcd_calc, 0);
    gcd_clean_btn->callback(gcd_clean, 0);


    gcd_output_text = new Fl_Box(350, 300, 150, 30, "gcd: ");


    gcd_group->end();

    gcd_group->hide();








    lcm_group = new Fl_Group(100, 70, 600, 500);


    lcm_number_input = new Fl_Input(300, 100, 270, 30, "numbers");

    Fl_Button* lcm_calc_btn = new Fl_Button(300, 200, 50, 30, "calc");
    Fl_Button* lcm_clean_btn = new Fl_Button(380, 200, 50, 30, "clean");

    lcm_calc_btn->callback(lcm_calc, 0);
    lcm_clean_btn->callback(lcm_clean, 0);


    lcm_output_text = new Fl_Box(350, 300, 150, 30, "lcm: ");

    lcm_group->end();

    lcm_group->hide();





    sincos_group = new Fl_Group(100, 70, 600, 500);




    sin_degree =  new Fl_Int_Input( 200, 100, 60, 30, "sin " );

    sin_degree->labelsize(20);
    sin_degree->textsize(20);

    Fl_Box* sin_degree_symbol = new Fl_Box(270, 107, 10, 10, "°");
    sin_degree_symbol->labelsize(25);


    Fl_Box* sin_arrow = new Fl_Box(320, 110, 20, 10, "->");
    sin_arrow->labelsize(30);

    sin_output = new Fl_Output(420, 100, 200, 30);
    sin_output->textsize(20);





    cos_degree =  new Fl_Int_Input( 200, 100+margin, 60, 30, "cos " );

    cos_degree->labelsize(20);
    cos_degree->textsize(20);

    Fl_Box* cos_degree_symbol = new Fl_Box(270, 107+margin, 10, 10, "°");
    cos_degree_symbol->labelsize(25);


    Fl_Box* cos_arrow = new Fl_Box(320, 110+margin, 20, 10, "->");
    cos_arrow->labelsize(30);

    cos_output = new Fl_Output(420, 100+margin, 200, 30);
    cos_output->textsize(20);





    tan_degree =  new Fl_Int_Input( 200, 100+margin+margin, 60, 30, "tan " );

    tan_degree->labelsize(20);
    tan_degree->textsize(20);

    Fl_Box* tan_degree_symbol = new Fl_Box(270, 107+margin+margin, 10, 10, "°");
    tan_degree_symbol->labelsize(25);


    Fl_Box* tan_arrow = new Fl_Box(320, 110+margin+margin, 20, 10, "->");
    tan_arrow->labelsize(30);

    tan_output = new Fl_Output(420, 100+margin+margin, 200, 30);
    tan_output->textsize(20);



    Fl_Button* sincos_calc_btn = new Fl_Button(270, 110+margin+margin+margin, 50, 30, "calc");
    sincos_calc_btn->callback(sincos_calc);


    Fl_Button* sincos_clean_btn = new Fl_Button(400, 110+margin+margin+margin, 50, 30, "clean");
    sincos_clean_btn->callback(sincos_clean);


    sincos_group->end();
    sincos_group->hide();





    heron_group = new Fl_Group(100, 70, 600, 500);

    heron_group->end();
    heron_group->hide();





    se_group = new Fl_Group(100, 70, 600, 500);


    se_group->end();
    se_group->hide();





    twopow_group = new Fl_Group(100, 70, 600, 500);


    twopow_group->end();
    twopow_group->hide();





    w->end();

}
